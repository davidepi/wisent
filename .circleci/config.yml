version: 2.1

executors:
  rust:
    docker:
      - image: circleci/rust:latest
    resource_class: small
  node:
    docker:
      - image: circleci/node:latest
    resource_class: small

commands:
  install_npm_dependencies:
    steps:
      - run:
          name: Installing yarn dependencies
          command: npm install
  print_rust_version:
    steps:
      - run:
          name: Printing rust version
          command: |
            rustup --version
            rustc --version
            cargo --version

jobs:
  commitlint:
    executor: node
    steps:
      - checkout
      - install_npm_dependencies
      - run:
          name: Running commitlint
          command: npm run commitlint
  markdownlint:
    executor: node
    steps:
      - checkout
      - install_npm_dependencies
      - run:
          name: Running markdownlint
          command: npm run markdownlint
  rust-fmt:
    executor: rust
    steps:
      - checkout
      - print_rust_version
      - run:
          name: Installing fmt
          command: rustup component add rustfmt
      - run:
          name: Running cargo fmt
          command: cargo fmt -- --check
  rust-lint:
    executor: rust
    steps:
      - checkout
      - print_rust_version
      - run:
          name: Installing clippy
          command: rustup component add clippy
      - run:
          name: Running cargo check
          command: cargo check --all-features --tests
      - run:
          name: Running cargo clean
          command: cargo clean
      - run:
          name: Running cargo clippy
          command: cargo clippy --all-features --tests -- -D warnings
  rust-build:
    executor: rust
    steps:
      - checkout
      - print_rust_version
      - run:
          name: Running cargo build
          command: cargo build
  rust-test:
    executor: rust
    steps:
      - checkout
      - print_rust_version
      - run:
          name: Running cargo test
          command: cargo test
  rust-coverage:
    executor: rust
    steps:
      - checkout
      - print_rust_version
      - run:
          name: Installing Rust nightly
          command: rustup install nightly
      - run:
          name: Running cargo test (on nightly)
          command: |
            export CARGO_INCREMENTAL=0
            export RUSTFLAGS="-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
            export RUSTDOCFLAGS="-Cpanic=abort"
            cargo +nightly build
            cargo +nightly test
      - run:
          name: Installing grcov
          command: |
            curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
            ./grcov --version
      - run:
          name: Running grcov
          command: |
            mkdir ./target/debug/coverage
            ./grcov ./target/debug/ -s . --commit-sha="${CIRCLE_SHA1}" --llvm --branch --ignore-not-existing --ignore="/*" --ignore="*_tests.rs" --ignore="benches/*" -t lcov -o ./target/debug/coverage/lcov.info
      - store_artifacts:
          path: ./target/debug/coverage/
      - run:
          name: Uploading coverage to Codecov
          command: bash <(curl -s https://codecov.io/bash) -f ./target/debug/coverage/lcov.info -n "${CIRCLE_BUILD_NUM}"

workflows:
  commitlint:
    jobs:
      - commitlint
  markdownlint:
    jobs:
      - markdownlint
  rust-fmt:
    jobs:
      - rust-fmt
  rust-lint:
    jobs:
      - rust-lint
  rust-build:
    jobs:
      - rust-build
  rust-test:
    jobs:
      - rust-test
      - rust-coverage
      