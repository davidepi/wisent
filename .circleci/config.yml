version: 2.1

executors:
  rust:
    docker:
      - image: circleci/rust:latest
    resource_class: small

commands:
  print_rust_version:
    steps:
      - run:
          name: Printing rust version
          command: |
            rustup --version
            rustc --version
            cargo --version
  restore_cargo_cache:
    steps:
      - restore_cache:
          keys:
            - cargo-cache-v1-{{ .Branch }}-{{ checksum "Cargo.lock" }}
            - cargo-cache-v1-{{ .Branch }}
            - cargo-cache-v1-
  save_cargo_cache:
    steps:
      - save_cache:
          paths:
            - ~/.cargo/bin/
            - ~/.cargo/registry/index/
            - ~/.cargo/registry/cache/
            - ~/.cargo/git/db/
          key: cargo-cache-v1-{{ .Branch }}-{{ checksum "Cargo.lock" }}

jobs:
  rust-fmt:
    executor: rust
    steps:
      - checkout
      - print_rust_version
      - restore_cargo_cache
      - run:
          name: Running cargo fmt
          command: cargo fmt -- --check
      - save_cargo_cache
  rust-lint:
    executor: rust
    steps:
      - checkout
      - print_rust_version
      - restore_cargo_cache
      - run:
          name: Installing clippy
          command: rustup component add clippy
      - run:
          name: Running cargo check
          command: cargo check --all-features --tests
       - run:
          name: Running cargo clean
          command: cargo clean
      - run:
          name: Running cargo clippy
          command: cargo clippy --all-features --tests -- -D warnings
      - save_cargo_cache
  rust-build:
    executor: rust
    steps:
      - checkout
      - print_rust_version
      - restore_cargo_cache
      - run:
          name: Running cargo build
          command: cargo build
      - save_cargo_cache
  rust-test:
    executor: rust
    steps:
      - checkout
      - print_rust_version
      - restore_cargo_cache
      - run:
          name: Running cargo test
          command: cargo test
      - save_cargo_cache
  rust-coverage:
    executor: rust
    steps:
      - checkout
      - print_rust_version
      - restore_cargo_cache
      - run:
          name: Installing Rust nightly
          command: rustup install nightly
      - run:
          name: Running cargo test (on nightly)
          command: |
            export CARGO_INCREMENTAL=0
            export RUSTFLAGS="-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
            export RUSTDOCFLAGS="-Cpanic=abort"
            cargo +nightly build
            cargo +nightly test
      - run:
          name: Installing grcov
          command: |
            curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
            ./grcov --version
      - run:
          name: Running grcov
          command: |
            ./grcov ./target/debug/ -s . --commit-sha="${CIRCLE_SHA1}" --llvm --branch --ignore-not-existing --ignore="/*" --ignore="*_tests.rs" --ignore="benches/*" -t lcov -o ./target/debug/coverage/lcov.info
      - save_cargo_cache
      - store_artifacts:
          path: ./target/debug/coverage/
      - run:
          name: Uploading coverage to Codecov
          command: bash <(curl -s https://codecov.io/bash) -f ./target/debug/coverage/lcov.info -n "${CIRCLE_BUILD_NUM}"

workflows:
  rust-fmt:
    jobs:
      - rust-fmt
  rust-lint:
    jobs:
      - rust-lint
  rust-build:
    jobs:
      -rust-build
  rust-test:
    jobs:
      - rust-test
      - rust-coverage
      